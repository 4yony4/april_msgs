
# find dependencies
find_package(ament_cmake REQUIRED)
find_package(builtin_interfaces REQUIRED)
find_package(rosidl_default_generators REQUIRED)
find_package(std_msgs REQUIRED)

rosidl_generate_interfaces(${PROJECT_NAME}
  msg_ros2/sem/Emergency.msg
  msg_ros2/sem/EmergencyRequestStatus.msg
  msg_ros2/sim_sem/Environment.msg
  msg_ros2/sim/FatigueAnalysis.msg
  msg_ros2/sim_sem/HumanBehaviour.msg
  msg_ros2/sim_sem/HumanGraspingStrategies.msg
  msg_ros2/sim/HumanHandGesture.msg
  msg_ros2/sim_sem/HumanMotion.msg
  msg_ros2/sim/HumanParameterIntention.msg #FLOAT TYPE FAILS BUILD, CHECK FLOAT TYPE
  msg_ros2/sim/HumanSight.msg
  msg_ros2/sem/NeuromorphicSensing.msg
  msg_ros2/sim_sem/PhysicalObject.msg
  msg_ros2/sim/RobotArm.msg
  msg_ros2/sim/RobotArmKinematic.msg
  msg_ros2/sim/RobotGraspingStrategies.msg
  msg_ros2/sim/RobotHand.msg
  msg_ros2/sim/RobotHandKinematic.msg
  msg_ros2/sim_sem/RobotHighLatencyCorrections.msg
  msg_ros2/sem/RobotLowLatencyCorrections.msg
  msg_ros2/sim/Tactile.msg
  msg_ros2/yarp/Output.msg
  msg_ros2/Debug.msg
  DEPENDENCIES builtin_interfaces std_msgs
  ADD_LINTER_TESTS
  )


if(BUILD_TESTING)
  find_package(ament_cmake REQUIRED)
  find_package(ament_cmake_copyright REQUIRED)
  find_package(ament_cmake_lint_cmake REQUIRED)
  find_package(ament_cmake_xmllint REQUIRED)

  ament_copyright()
  ament_lint_cmake()
  ament_xmllint()
endif()

#target_include_directories(my_target
#  PUBLIC
#    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
#    $<INSTALL_INTERFACE:include>)

install(
  FILES map_rules.yaml
  DESTINATION share/${PROJECT_NAME}
)

ament_export_dependencies(rosidl_default_runtime)

ament_package()
